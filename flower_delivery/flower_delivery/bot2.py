import logging
import asyncio
import os

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'flower_delivery.settings')
import django

django.setup()
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from config import TOKEN, TELEGRAM_CHAT_ID
from orders.models import Flower
from asgiref.sync import sync_to_async

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(token=TOKEN)
dp = Dispatcher()


@sync_to_async
def get_flower_by_id(id):
    return Flower.objects.get(id=id)


@dp.message(Command('start'))
@dp.message(Command('help'))
async def send_welcome(message: types.Message):
    logger.info(f"User {message.from_user.id} sent the /start command")
    await message.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤!")


async def send_order_to_telegram(order_data):
    text = f"–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n" \
           f"üå∏ –ë—É–∫–µ—Ç: {order_data['flower_image']}\n" \
           f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {order_data['cost']} ‚ÇΩ\n" \
           f"üìÖ –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {order_data['delivery_date']}\n" \
           f"üïë –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {order_data['delivery_time']}\n" \
           f"üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order_data['delivery_address']}\n" \
           f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order_data.get('comment', '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤')}"

    try:
        await bot.send_photo(TELEGRAM_CHAT_ID, order_data["flower_image"], caption=text, parse_mode=ParseMode.MARKDOWN)
        logger.info("Order data sent successfully to Telegram.")
    except Exception as e:
        logger.error(f"Failed to send order to Telegram: {e}")


@dp.message(Command('order'))
async def order(message: types.Message):
    try:
        flower_id = int(message.text.split()[1])
        flower = await get_flower_by_id(flower_id)

        order_data = {
            "flower_image": flower.image.url,
            "cost": flower.price,
            "delivery_date": "2024-12-25",
            "delivery_time": "14:00",
            "delivery_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 10",
            "comment": "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!"
        }

        photo = order_data["flower_image"]
        cost = order_data["cost"]
        delivery_date = order_data["delivery_date"]
        delivery_time = order_data["delivery_time"]
        delivery_address = order_data["delivery_address"]
        comment = order_data.get("comment", "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")

        text = f"–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n" \
               f"üå∏ –ë—É–∫–µ—Ç: {photo}\n" \
               f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {cost} ‚ÇΩ\n" \
               f"üìÖ –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_date}\n" \
               f"üïë –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_time}\n" \
               f"üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_address}\n" \
               f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"

        await bot.send_photo(message.chat.id, photo, caption=text, parse_mode=ParseMode.MARKDOWN)
        await send_order_to_telegram(order_data)

    except IndexError:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –±—É–∫–µ—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: /order 3")
    except ValueError:
        await message.reply("ID –±—É–∫–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except Flower.DoesNotExist:
        await message.reply("–ë—É–∫–µ—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        logger.error(f"Unexpected error: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    asyncio.run(dp.start_polling(bot))

@dp.message_handler(commands=['report'])
async def send_report(message: types.Message):
    report = Report.objects.first()  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç
    if report:
        text = f"–û—Ç—á–µ—Ç –∑–∞ {report.date}:\n"
        text += f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {report.total_orders}\n"
        text += f"–û–±—â–∏–π –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂: {report.total_sales} —Ä—É–±\n"
        text += f"–û–±—â–∏–π –¥–æ—Ö–æ–¥: {report.total_revenue} —Ä—É–±\n"
        text += f"–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {report.total_expenses} —Ä—É–±\n"
        text += f"–ü—Ä–∏–±—ã–ª—å: {report.profit} —Ä—É–±\n"
    else:
        text = "–û—Ç—á–µ—Ç–æ–≤ –Ω–µ—Ç."

    await message.reply(text)
